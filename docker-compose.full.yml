version: '3.8'

# Full development compose that runs the complete stack.
# By default this will pull images from Docker Hub if IMAGE_TAG is set to a tag
# that exists (e.g. latest, experimental, dev). If you'd like to build locally
# for development, set LOCAL_BUILD=true and docker-compose will build the
# `m3u-editor` image from the local Dockerfile.

name: m3u-editor

services:
  nginx:
    build:
      context: .
      dockerfile: Dockerfile
      target: nginx
      args:
        GIT_BRANCH: ${GIT_BRANCH:-local}
        GIT_COMMIT: ${GIT_COMMIT:-local}
        GIT_TAG: ${GIT_TAG:-local}
    image: sparkison/m3u-editor-nginx:${IMAGE_TAG:-latest}
    depends_on:
      - php-fpm
    environment:
      - APP_PORT=${APP_PORT:-36400}
      - APP_URL=${APP_URL:-http://localhost}
      - FPMPORT=${FPMPORT:-9900}
      - M3U_PROXY_PORT=${M3U_PROXY_PORT:-38085}
      - REVERB_PORT=${REVERB_PORT:-36800}
    volumes:
      - ./docker/8.4/nginx/nginx.tmpl:/etc/nginx/nginx.tmpl:ro
      - ./docker/8.4/nginx/laravel.tmpl:/etc/nginx/conf.d/laravel.tmpl:ro
      - ./public:/var/www/public:ro
    ports:
      - '${APP_PORT:-36400}:${APP_PORT:-36400}'
    restart: unless-stopped

  postgres:
    build:
      context: .
      dockerfile: Dockerfile
      target: postgres
      args:
        GIT_BRANCH: ${GIT_BRANCH:-local}
        GIT_COMMIT: ${GIT_COMMIT:-local}
        GIT_TAG: ${GIT_TAG:-local}
    image: sparkison/m3u-editor-postgres:${IMAGE_TAG:-latest}
    environment:
      PG_PORT: ${PG_PORT:-54320}
      POSTGRES_DB: ${PG_DATABASE:-m3ue}
      POSTGRES_USER: ${PG_USER:-m3ue}
      POSTGRES_PASSWORD: ${PG_PASSWORD:-m3ue}
    volumes:
      - m3ue_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER:-m3ue} -d ${PG_DATABASE:-m3ue} -h 127.0.0.1 || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 12
    restart: unless-stopped

  redis:
    build:
      context: .
      dockerfile: Dockerfile
      target: redis
      args:
        GIT_BRANCH: ${GIT_BRANCH:-local}
        GIT_COMMIT: ${GIT_COMMIT:-local}
        GIT_TAG: ${GIT_TAG:-local}
    image: sparkison/m3u-editor-redis:${IMAGE_TAG:-latest}
    volumes:
      - redis-data:/data
    ports:
      #- '${REDIS_SERVER_PORT:-63790}:${REDIS_SERVER_PORT:-63790}'
    restart: unless-stopped

  php-fpm:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
      args:
        GIT_BRANCH: ${GIT_BRANCH:-local}
        GIT_COMMIT: ${GIT_COMMIT:-local}
        GIT_TAG: ${GIT_TAG:-local}
    image: sparkison/m3u-editor-fpm:${IMAGE_TAG:-latest}
    environment:
      - APP_ENV=${APP_ENV:-local}
      - APP_DEBUG=${APP_DEBUG:-true}
      - FPMPORT=${FPMPORT:-9900}
      - DB_CONNECTION=pgsql # or sqlite
      - DB_HOST=postgres
      - DB_PORT=${PG_PORT:-54320}
      - DB_DATABASE=${PG_DATABASE:-m3ue}
      - DB_USERNAME=${PG_USER:-m3ue}
      - DB_PASSWORD=${PG_PASSWORD:-m3ue}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_SERVER_PORT:-63790}
      - M3U_PROXY_URL=${M3U_PROXY_PUBLIC_URL:-http://localhost:${M3U_PROXY_PORT:-38085}}
      - REVERB_PORT=${REVERB_PORT:-36800}
      - M3U_PROXY_PORT=${M3U_PROXY_PORT:-38085}
    depends_on:
      - postgres
      - redis
      - m3u-proxy
    volumes:
      - ./docker-config:/var/www/config
      - ./:/var/www/html:cached
    ports:
      #- '${FPMPORT:-9900}:${FPMPORT:-9900}'
      #- '${REVERB_PORT:-36800}:${REVERB_PORT:-36800}'
      #- '${M3U_PROXY_PORT:-38085}:${M3U_PROXY_PORT:-38085}'
    restart: unless-stopped

  m3u-proxy:
    image: sparkison/m3u-proxy:${IMAGE_TAG:-latest}
    build:
      context: ../m3u-proxy
      dockerfile: Dockerfile
    environment:
      - PORT=${M3U_PROXY_PORT:-38085}
      - LOG_LEVEL=error # error, warn, info, debug
      - REDIS_ENABLED=true
      - REDIS_HOST=redis
      - REDIS_SERVER_PORT=${REDIS_SERVER_PORT:-63790}
      - REDIS_DB=6 # Use a separate Redis DB for m3u-proxy caching, 1-5 used by editor
      - ENABLE_TRANSCODING_POOLING=true
      - PUBLIC_URL=${M3U_PROXY_PUBLIC_URL:-http://localhost:${M3U_PROXY_PORT:-38085}}
    ports:
      #- '${M3U_PROXY_PORT:-38085}:${M3U_PROXY_PORT:-38085}'
    restart: unless-stopped

volumes:
  m3ue_pgdata:
  redis-data:

# Notes:
# - To run fully from prebuilt images: set IMAGE_TAG to the desired tag and make sure
#   images exist on Docker Hub (no LOCAL_BUILD or set LOCAL_BUILD=false).
# - For local development (build from local Dockerfile): set LOCAL_BUILD=true.
